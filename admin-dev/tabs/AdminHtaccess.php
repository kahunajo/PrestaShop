<?php

include_once(PS_ADMIN_DIR.'/../classes/AdminTab.php');

class AdminHtaccess extends AdminTab
{
	public function __construct()
	{
		$this->_path =  dirname(__FILE__).'/../../';
		$this->_file = $this->_path.'.htaccess';
		$this->_data = $this->_getContent();
		return parent::__construct();
	}

	public function display()
	{
		global $currentIndex;

		$languages = Language::getLanguages();
		echo '<fieldset class="width2"><legend><img src="../img/t/AdminHtaccess.gif" />'.$this->l('Htaccess file generation').'</legend>
		<p><b>'.$this->l('Warning:').' </b>'.$this->l('this tool can be ONLY used if you are hosted by an').'
		<b><a href="http://www.apache.org">'.$this->l('Apache web server').'</a></b>
		'.$this->l('.').' '.$this->l('Please ask to your webhost.').'</p><p>',
		$this->l('This tool will automaticaly generate an ".htaccess" file, that will grant you the possibility to do URL rewriting and to catch 404 errors.'),
		'</p><p>',
		$this->l('If you did not have enabled the url-rewriting when generating the ".htaccess" file, such feature won\'t be available'),
		'</p></fieldset><br />';

		if ($this->_checkHtaccessConfiguration())
		{
			echo '
			<form action="'.$currentIndex.'&token='.$this->token.'" method="post" enctype="multipart/form-data">
				<fieldset class="width2"><legend><img src="../img/admin/enabled.gif" />'.$this->l('Generate file').'</legend>';
				echo $this->l('You can regenerate your ".htaccess" file by clicking on the following button:').'<br /><br />';
				echo '<input type="submit" value="'.$this->l('Generate .htaccess file').'" name="submitGenerate" class="button" />
				</fieldset>
			</form>';
		}
		else
		{
			echo '<fieldset class="width2"><legend><img src="../img/admin/forbbiden.gif" />'.$this->l('Require').'</legend>';
			echo $this->l('Before being able to use this tool, you need to:').'<br /><br />';
			echo $this->l('- create a').' <b>'. $this->l('.htaccess').'</b> '.$this->l('blank file in dir:').' <b>'.__PS_BASE_URI__.'</b><br />';
			echo $this->l('- give it write permissions (chmod 777 on Unix system)');
			echo '</fieldset>';
		}
	}

	public function _checkHtaccessConfiguration()
	{
		$ret = file_exists($this->_file);
		$ret &= is_writable($this->_file);
		return $ret;
	}

	function postProcess()
	{
		global $currentIndex;

		if (Tools::isSubmit('submitGenerate'))
		{
			if ($this->tabAccess['edit'] === '1')
			{
				if (!$writeFd = @fopen($this->_file, 'w'))
					die ($this->l('Cannot write into file:').' <b>'.$this->_file.'</b><br />'.$this->l('Please check write permissions.'));
				else
				{
					// PS Comments
					fwrite($writeFd, "# .htaccess automaticaly generated by PrestaShop e-commerce open-source solution\n");
					fwrite($writeFd, "# http://www.prestashop.com - http://www.prestashop.com/forums\n\n");

					// RewriteEngine
					if (Configuration::get('PS_REWRITING_SETTINGS'))
					{
						fwrite($writeFd, $this->_data['RewriteEngine']['comment']."\nRewriteEngine on\n\n");
						fwrite($writeFd, $this->_data['RewriteRule']['comment']."\n");
						foreach ($this->_data['RewriteRule']['content'] as $rule => $url)
							fwrite($writeFd, 'RewriteRule '.$rule.' '.__PS_BASE_URI__.$url."\n");
						fwrite($writeFd, "\n");
					}
					
					// ErrorDocument
					fwrite($writeFd, $this->_data['ErrorDocument']['comment']."\nErrorDocument ".$this->_data['ErrorDocument']['content']."\n");

					fclose($writeFd);
					Tools::redirectAdmin($currentIndex.'&conf=4&token='.$this->token);
				}
			} else
				$this->_errors[] = Tools::displayError('You do not have permission to edit anything here.');
		}
	}

	public function _getContent()
	{
		$tab = array();

		// ErrorDocument
		$tab['ErrorDocument']['comment'] = '# Catch 404 errors';
		$tab['ErrorDocument']['content'] = '404 '.__PS_BASE_URI__.'404.php';

		// RewriteEngine
		$tab['RewriteEngine']['comment'] = '# URL rewriting module activation';
		
		// RewriteRules
		//IMPORTANT : if you change the lines bellow, don"t forget to change the "urlcanonical" module too
		$tab['RewriteRule']['comment'] = '# URL rewriting rules';
		$tab['RewriteRule']['content']['^([0-9]+)\-([0-9]+)(\-[a-zA-Z0-9-]*)/([a-zA-Z0-9-]*)\.jpg$'] = 'img/p/$1-$2$3.jpg [L,E]';
		$tab['RewriteRule']['content']['^([0-9]+)(\-[a-zA-Z0-9-]*)/([a-zA-Z0-9-]*)\.jpg$'] = 'img/c/$1$2.jpg [L,E]';
		$tab['RewriteRule']['content']['^([a-zA-Z0-9-]*)/([0-9]+)\-([a-zA-Z0-9-]*)\.html(.*)$'] = 'product.php?id_product=$2$4 [L,E]';
		$tab['RewriteRule']['content']['^([0-9]+)\-([a-zA-Z0-9-]*)\.html(.*)$'] = 'product.php?id_product=$1$3 [L,E]';
		$tab['RewriteRule']['content']['^([0-9]+)\-([a-zA-Z0-9-]*)(.*)$'] = 'category.php?id_category=$1 [QSA,L,E]';
		$tab['RewriteRule']['content']['^content/([0-9]+)\-([a-zA-Z0-9-]*)(.*)$'] = 'cms.php?id_cms=$1 [QSA,L,E]';
		$tab['RewriteRule']['content']['^([0-9]+)__([a-zA-Z0-9-]*)(.*)$'] = 'supplier.php?id_supplier=$1$3 [QSA,L,E]';
		$tab['RewriteRule']['content']['^([0-9]+)_([a-zA-Z0-9-]*)(.*)$'] = 'manufacturer.php?id_manufacturer=$1$3 [QSA,L,E]';

		return $tab;
	}
}

?>
